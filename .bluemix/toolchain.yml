---
version: "2"
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    # original static description:
    # $ref: "#/messages/template.description"
    # template descriptions now vary depending on the flavor of source provider selected
    $ref: >
      $env.source_provider === 'githubconsolidated' ?
      '#/messages/template.description.github' : '#/messages/template.description'
  header: "![](toolchain.svg?localize)"
  icon: icon.svg
  required:
    - sample-build
    - sample-repo
  $configuration:
    ENABLE_EXTENSIONS: true
    ENABLE_IF_ELSE: true
    EXPRESSION_MAXLENGTH: 1000
  info:
    # original static git url and branch string definitions
    # git url: >-
    #  [https://github.com/open-toolchain/simple-toolchain-hosted](https://github.com/open-toolchain/simple-toolchain-hosted)
    # git branch: >-
    #  [master](https://github.com/open-toolchain/simple-toolchain-hosted/tree/master)

    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc.
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
      '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
      $env.branch ?
        '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
        '[master]('+ $env.repository + '/tree/master)'
    hosted_region: ""
toolchain:
  name: >
    $env.toolchainName ? '{{toolchainName}}' :
      'simple-zos-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  sample-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'gitlab'
    parameters:
      repo_name: "{{toolchain.name}}"
      repo_url: >
        $env.type === 'link' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' :
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/IBM/zopeneditor-about':
          'https://gitlab.com/kmayoz/zopeneditor-sample'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? $env.app_repo :
          $env.sourceZipUrl ? '{{sourceZipUrl}}' : 
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/IBM/zopeneditor-about':
            'https://gitlab.com/kmayoz/zopeneditor-sample'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
      legal: true
  pipeline-repo:
    service_id: >
      $env.pipeline_type !== 'tekton' ? '' : $env.source_provider ? $env.source_provider : 'gitlab'
    parameters:
      repo_name: >
        $env.toolchainName ? '{{toolchainName}}-pipeline' : "simple-toolchain-hosted-{{timestamp}}"
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/simple-toolchain-hosted"
        } else {
          "https://github.com/kristinochka/simple-zos-toolchain"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/simple-toolchain-hosted"
        } else {
          "https://github.com/kristinochka/simple-zos-toolchain"
        }
      type: "clone"
      has_issues: false
      enable_traceability: false
      kind: ["pipeline"]
  webide:
    service_id: customtool
    parameters:
      name: Wazi Codeready Workspaces
      documentationUrl: https://ibm.biz/wazi-crw-doc
      iconUrl: https://raw.githubusercontent.com/IBM/zopeneditor-about/master/che/images/ibm-wazi-development-client.svg
      lifecyclePhase: CODE
      description: CRW description

  devops-insights:
    service_id: draservicebroker
